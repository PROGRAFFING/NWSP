/*! normalize.css v5.0.0 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,footer,header,nav,section{display:block}h1{font-size:2em;margin:.67em 0}figcaption,figure,main{display:block}figure{margin:1em 40px}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:inherit}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}audio,video{display:inline-block}audio:not([controls]){display:none;height:0}img{border-style:none}svg:not(:root){overflow:hidden}button,input,optgroup,select,textarea{font-family:sans-serif;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{-webkit-box-sizing:border-box;box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{display:inline-block;vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details,menu{display:block}summary{display:list-item}canvas{display:inline-block}template{display:none}[hidden]{display:none}html{-webkit-box-sizing:border-box;box-sizing:border-box}body,html{height:100%}*,::after,::before{-webkit-box-sizing:inherit;box-sizing:inherit}a{color:#00338d;text-decoration:none}a:active,a:focus,a:hover{color:#00338d;text-decoration:underline}@media (min-width:1200px){.container{max-width:1200px}}@media (min-width:1920px){.container{max-width:1600px}}.u-white{color:#fff}html{font-size:100%}body{color:#353535;font-family:Montserrat,sans-serif;line-height:1.65}p{margin-bottom:1.15rem}h1,h2,h3,h4,h5{margin:2.75rem 0 1.05rem;line-height:1.15}.t-1,h1{margin-top:0;font-size:3.052em}.post__col--1 h3,.t-2,h2{font-size:2.441em}.t-3,h3{font-size:1.953em}.t-4,h4{font-size:1.563em}.t-5,h5{font-size:1.25em}.text_small,small{font-size:.8em}.t-big{font-size:5.46875vw;line-height:1.2;font-weight:800}.t-bold{font-weight:700}.t-extra,.t-title{font-weight:800}.t-italic{font-style:italic}.t-title{font-size:55px;text-transform:uppercase;font-family:Montserrat,sans-serif}.t-title--small{font-size:1.1rem}p{font-size:1.1rem}.t-p--medium{font-size:1.4rem}.t-p--serif{font-family:"PT Serif",serif}.t-link{color:#00338d;font-weight:800;font-family:Montserrat,sans-serif;text-transform:uppercase;font-size:10px;letter-spacing:1px;-webkit-transition:all .3s ease-in-out;transition:all .3s ease-in-out}.t-link--white{color:#fff}.t-link--white:hover{color:#fff}.t-link:hover{text-decoration:none}.t-link:hover i{-webkit-transform:translateX(5px);transform:translateX(5px)}.t-link i{margin-left:5px;-webkit-transition:all .3s ease-in-out;transition:all .3s ease-in-out}.clearfix::after{clear:both;content:"";display:table}.hide-text{overflow:hidden;padding:0;text-indent:101%;white-space:nowrap}.visually-hidden{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px}.section-full{min-height:100vh}.u-h-100{height:100%}.u-gray{background:#f6f6f7}.content-wrapper{overflow-x:hidden}.header{top:0;left:0;width:100%;z-index:999}.header--top{position:absolute;left:0;top:0;width:100%;background:#00338d;height:60px;z-index:999}.accessibility .btn{margin-left:5px}.header__search{color:#fff;margin-left:10px}.nav__container{margin-top:80px}.header{position:absolute;top:0}.header.fixed{position:fixed;top:20px;left:0;width:100%;-webkit-transform:translateY(-80px);transform:translateY(-80px)}.header.fixed .logo__wrapper{height:60px}.header.fixed .logo__wrapper img{width:50px}.header.fixed #mega-menu-wrap-max_mega_menu_1 #mega-menu-max_mega_menu_1{height:60px;line-height:60px}.header.fixed .nav__container{background:#fff}.header.fixed .nav__container #mega-menu-wrap-max_mega_menu_1 #mega-menu-max_mega_menu_1>li.mega-menu-item.mega-current-menu-item>a.mega-menu-link,.header.fixed .nav__container #mega-menu-wrap-max_mega_menu_1 #mega-menu-max_mega_menu_1>li.mega-menu-item>a.mega-menu-link{color:#353535}#mega-menu-wrap-max_mega_menu_1 #mega-menu-max_mega_menu_1{text-align:right;height:100px;line-height:100px}@media (min-width:46.25em){#mega-menu-wrap-max_mega_menu_1{background:0 0}}#mega-menu-wrap-max_mega_menu_1 #mega-menu-max_mega_menu_1>li.mega-menu-item.mega-current-menu-item>a.mega-menu-link,#mega-menu-wrap-max_mega_menu_1 #mega-menu-max_mega_menu_1>li.mega-menu-item>a.mega-menu-link{color:#fff;font-size:11px;font-weight:800;text-transform:uppercase;letter-spacing:1px}#mega-menu-wrap-max_mega_menu_1 #mega-menu-max_mega_menu_1>li.mega-menu-item.mega-current-menu-item>a.mega-menu-link:focus,#mega-menu-wrap-max_mega_menu_1 #mega-menu-max_mega_menu_1>li.mega-menu-item.mega-current-menu-item>a.mega-menu-link:hover,#mega-menu-wrap-max_mega_menu_1 #mega-menu-max_mega_menu_1>li.mega-menu-item>a.mega-menu-link:focus,#mega-menu-wrap-max_mega_menu_1 #mega-menu-max_mega_menu_1>li.mega-menu-item>a.mega-menu-link:hover{font-weight:800;background:0 0!important}#mega-menu-wrap-max_mega_menu_1 #mega-menu-max_mega_menu_1>li.mega-menu-item.mega-toggle-on>a.mega-menu-link,#mega-menu-wrap-max_mega_menu_1 #mega-menu-max_mega_menu_1>li.mega-menu-megamenu>ul.mega-sub-menu li.mega-menu-column>ul.mega-sub-menu>li.mega-menu-item>a.mega-menu-link{font-weight:800}#mega-menu-wrap-max_mega_menu_1 #mega-menu-max_mega_menu_1>li.mega-menu-megamenu>ul.mega-sub-menu li.mega-menu-column>ul.mega-sub-menu>li.mega-menu-item li.mega-menu-item>a.mega-menu-link{font-family:"PT Serif",serif}.menu__link{color:#fff;font-size:10px;font-weight:800;text-transform:uppercase;letter-spacing:1px}.mega-menu-row.mega-menu-last-row{padding-top:0!important}#mega-menu-wrap-max_mega_menu_1 #mega-menu-max_mega_menu_1 li.mega-menu-row.mega-menu-last-row{border-top:1px solid #e6e7ea}#mega-menu-wrap-max_mega_menu_1 #mega-menu-max_mega_menu_1 li.mega-menu-row.mega-menu-last-row a{text-align:right!important}.nav__container{padding-top:60px;margin:0 auto;-webkit-transition:all .4s ease-in;transition:all .4s ease-in}.nav__container:hover{background:#fff}.nav__container:hover #mega-menu-wrap-max_mega_menu_1 #mega-menu-max_mega_menu_1>li.mega-menu-item.mega-current-menu-item>a.mega-menu-link,.nav__container:hover #mega-menu-wrap-max_mega_menu_1 #mega-menu-max_mega_menu_1>li.mega-menu-item>a.mega-menu-link{color:#353535}.mega-has-child{position:unset!important}#mega-menu-wrap-max_mega_menu_1{margin:0 auto;max-width:1600px}.mega-sub-menu{position:absolute;left:0;right:0;top:0}.mega-menu-row{padding-top:30px!important}.mega-menu-link:hover{font-weight:800!important}.nav-background{position:absolute;left:0;top:0;width:100%;height:0;background:#fff;-webkit-transition:all 450ms ease-in-out;transition:all 450ms ease-in-out}.logo__wrapper{position:absolute;width:1600px;left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%);height:100px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.logo__wrapper img{width:80px;-webkit-transition:all .4s ease-in-out;transition:all .4s ease-in-out}.footer{background:#00338d}.footer--top{padding:50px 0;color:#fff}.footer--top h3{text-transform:uppercase;margin-bottom:50px}.list{list-style:none;margin:0;padding:0}.footer__list{columns:2;-webkit-columns:2;-moz-columns:2}.list__item{margin-bottom:16px}.list__link{text-transform:uppercase;font-weight:800;font-size:13px;color:#fff;-webkit-transition:all .3s ease-in-out;transition:all .3s ease-in-out}.list__link i{margin-left:5px;-webkit-transition:all .3s ease-in-out;transition:all .3s ease-in-out}.list__link:hover{color:#fff;text-decoration:none;opacity:.7}.list__link:hover i{-webkit-transform:translateX(5px);transform:translateX(5px)}.footer--bottom{padding:50px 0;background:#00338d}.footer--bottom .nav__list{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;padding:0}.footer--bottom .nav__list li{position:relative;margin:0 20px 0 0}.footer--bottom .nav__list li:after{content:"|";position:absolute;right:-11px;top:0;color:#fff;opacity:.4}.footer--bottom .nav__list li a{text-transform:none;font-size:12px;font-family:"PT Serif",serif}.footer__socials-row{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.copyright{margin-top:50px;color:#fff}.copyright span{opacity:.2;font-size:12px}.copyright img{margin-left:10px}.footer__socials-list{margin-top:40px;display:-webkit-box;display:-ms-flexbox;display:flex}.footer__socials-list li{margin-right:30px}.footer__socials-list li a{color:#fff;font-size:24px}.footer__col--right a{color:#fff}.btn{position:relative;font-size:12px;padding:17px 24px;font-weight:800;text-transform:uppercase;border:1px solid transparent;border-radius:0;overflow:hidden;z-index:0}.btn:after,.btn:before{content:'';position:absolute;left:50%;top:0;height:100%;width:0;background:#fff;opacity:0;-webkit-transition:all .3s ease-in-out;transition:all .3s ease-in-out;z-index:-1;-webkit-transition:opacity .3s ease-in-out .1s,width .3s ease-in-out;transition:opacity .3s ease-in-out .1s,width .3s ease-in-out}.btn:after{left:auto;right:50%}.btn:hover{color:#353535}.btn:hover:after,.btn:hover:before{width:50%;opacity:1}.btn--accent{border:1px solid #353535}.btn--accent:after,.btn--accent:before{background:#00338d}.btn--accent:hover{color:#fff}.btn--accent-light{border-color:#fff;color:#fff}.btn--accent-light:after,.btn--accent-light:before{background:#00338d}.btn--accent-light:hover{color:#fff;border-color:#00338d}.btn--white{border-color:#fff;color:#fff}.btn--small{padding:5px 23px;font-weight:700;font-size:10px}.btn--solid{background:#fff}.btn--solid:hover{border-color:#0058f3;color:#fff}.btn--solid:after,.btn--solid:before{background:#0058f3}.home-hero,.home-hero .slick-list{height:100vh}.hero,.slick-track{height:100%;position:relative}.hero__item{position:relative}.hero__item:after{content:'';position:absolute;left:0;top:0;width:100%;height:100%;background:rgba(0,0,0,.4)}.hero__slide-wrapper{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.hero__img{position:absolute;left:0;top:0;width:100%;height:100%}.hero__row{position:relative;z-index:1}.hero__row--text{overflow:hidden;color:#fff}.hero__row--text .t-big,.hero__row--text a,.hero__row--text p{opacity:0;-webkit-transform:translateX(-250px);transform:translateX(-250px);-webkit-transition:all .3s ease-in-out;transition:all .3s ease-in-out}.hero__row--text .btn{margin-top:20px}.slick-active .hero__row--text .t-big,.slick-active .hero__row--text a,.slick-active .hero__row--text p{-webkit-transition:all .3s ease-in-out;transition:all .3s ease-in-out;opacity:1;-webkit-transform:translateX(0);transform:translateX(0)}.hero__link-container{position:absolute;right:0;left:0;bottom:0;height:0;z-index:5}.hero__link-col{background:url(https://static-frm.ie.edu/university/wp-content/uploads/sites/6/2016/02/Open-House-500x420.jpg) center center/cover no-repeat;width:30%;padding:10px 20px;position:absolute;right:0;bottom:0;height:250px}.hero__link-col *{color:#fff;-webkit-transition:all .3s ease-in-out;transition:all .3s ease-in-out}.hero__link-col h3{text-transform:uppercase}.hero__link-col p{font-size:14px}.hero__link:hover{text-decoration:none}.hero__link:hover h3,.hero__link:hover p{opacity:.5}.nav__container{z-index:99;position:relative}.cta__slider .slick-dots{bottom:10px}.cta__slider .slick-dots li{padding:20px;width:60px;height:2px}.cta__slider .slick-dots li button{width:100%;height:100%;padding:0}.cta__slider .slick-dots li button:before{content:'';background:#fff;width:100%;height:2px;opacity:.4;top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%)}.cta__slider .slick-dots li.slick-active button:before{opacity:1}.cta__slider-wrapper.slick-dotted.slick-slider{margin-bottom:0}.slide{position:relative}.slide:after{content:'';position:absolute;left:0;top:0;width:100%;height:100%;background:rgba(0,0,0,.4)}.slide img{position:absolute;left:0;top:0;height:100%;width:100%;-o-object-fit:cover;object-fit:cover}.slide__inner{padding:200px 0;position:relative;z-index:1;color:#fff}.slide__inner a{margin-top:20px}.discover{padding:50px 0;border-bottom:1px solid #e6e7ea}.blog__cta{padding:70px;background:#00338d;color:#fff}.blog__cta .fa-rocket{font-size:70px}.blog__cta .btn{margin-top:50px}.blog__cta-heading{margin-top:20px;text-transform:uppercase}.about__heading{margin:100px 0 70px}.about__inner-col{margin-bottom:20px}.about__inner-col p{font-style:normal}.about__col--right{background:#00338d;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:distribute;justify-content:space-around;color:#fff}.cta__container{padding:250px 80px 80px;position:relative;overflow:hidden}.cta__container a:hover{text-decoration:none}.cta__container:hover img{-webkit-transform:scale(1.1);transform:scale(1.1)}.cta__container img{position:absolute;left:0;top:0;width:100%;height:100%;-o-object-fit:cover;object-fit:cover;-webkit-transition:all .4s ease-in-out;transition:all .4s ease-in-out}.cta__container:after{content:'';position:absolute;left:0;top:0;width:100%;height:100%;background:rgba(0,0,0,.4)}.cta__container .cta__row{position:relative;z-index:1}.cta__container h3{text-transform:uppercase}.cta{padding:100px 0}.featured-posts{padding-bottom:100px;border-bottom:1px solid #e6e7ea}.featured__heading a:hover{text-decoration:none}.featured__heading h4{color:#353535}.posts__heading{margin:100px 0 70px}.posts{padding-bottom:100px}.posts .btn{margin:0 auto;display:inline-block;margin-top:100px}.post__btn-wrapper{text-align:center}.posts__row{display:grid;grid-gap:40px;grid-template-columns:1fr 1fr 1fr}.post__col{margin-bottom:50px}.post__col img{width:100%;height:200px;-o-object-fit:cover;object-fit:cover}.post__col--1{grid-column:1/3;grid-row:1/3}.post__col--1 img{height:400px}.post__title{color:#353535}.post__date{position:relative;text-transform:uppercase;font-weight:800;color:#707070;display:block}.post__date:after{content:'';position:absolute;left:0;bottom:-20px;width:50px;height:2px;background:#00338d}.post__cat{display:block;margin-top:40px;font-size:10px;text-transform:uppercase}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
